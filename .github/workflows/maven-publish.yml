# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [ main ]

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2         
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Test
        run: mvn --batch-mode test

  publish-artifact:
    runs-on: ubuntu-latest
    needs: [unit-test]
    permissions: 
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Set up Maven Settings for deploy
        uses: s4u/maven-settings-action@v2.1.1
      - name: Publish package
      #  run: mvn --batch-mode deploy
        env:
          GITHUB_USERNAME: ${{ secrets.USERNAME }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
       # run: mvn --settings settings.xml --file pom.xml deploy
       # run: mvn clean source:jar deploy -DuniqueVersion=false -Dmaven.source.useDefaultManifestFile=true -Dmaven.source.includePom=true -Dmaven.install.skip=true -DdeplyAtEnd=true -DaltDeploymentRepository='github::default::https://maven.pkg.github.com/jesusrh12/ffm-ne-back-jv-lib-commons'
        run: mvn source:jar deploy -DuniqueVersion=false -Dmaven.source.useDefaultManifestFile=true -Dmaven.source.includePom=true -DaltDeploymentRepository='github::default::https://maven.pkg.github.com/Roggerbogota13/mavenprueba'
        
 # push_to_registry:
 #   name: Push Docker image to Docker Hub
 #   runs-on: ubuntu-latest
 #   needs: [publish-artifact]
 #   steps:
 #     - name: Check out the repo
 #       uses: actions/checkout@v3

 #     - name: Log in to Docker Hub
 #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
 #       with:
 #         username: ${{ secrets.USERDOCKERHUB }}
 #         password: ${{ secrets.PASSWORD_DOCKERHUB }}

 #     - name: Extract metadata (tags, labels) for Docker
 #       id: meta
 #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
 #       with:
 #         images: my-docker-hub-namespace/my-docker-hub-repository

 #     - name: Build and push Docker image
 #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
 #       with:
 #         context: .
 #         push: false
 #         tags: ${{ steps.meta.outputs.tags }}
 #         labels: ${{ steps.meta.outputs.labels }}
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    needs: [publish-artifact]
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERDOCKERHUB }}
          password: ${{ secrets.PASSWORD_DOCKERHUB }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: |
            my-docker-hub-namespace/my-docker-hub-repository
            ghcr.io/${{ github.mavenprueba }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}     


        
